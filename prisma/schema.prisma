// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  email         String    @unique
  name          String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  enrolledIn    Course[]  @relation(fields: [courseIds], references: [id])
  courseIds     String[]  @db.ObjectId
  progress      Progress[]
}

model Course {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  slug        String    @unique
  imageUrl    String?
  published   Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  lessons     Lesson[]
  students    User[]    @relation(fields: [studentIds], references: [id])
  studentIds  String[]  @db.ObjectId
}

model Lesson {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  content     String
  order       Int
  courseId    String    @db.ObjectId
  course      Course    @relation(fields: [courseId], references: [id])
  resources   Resource[]
  progress    Progress[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Resource {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  type        String    // video, pdf, link, etc.
  url         String
  lessonId    String    @db.ObjectId
  lesson      Lesson    @relation(fields: [lessonId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Progress {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  userId      String    @db.ObjectId
  user        User      @relation(fields: [userId], references: [id])
  lessonId    String    @db.ObjectId
  lesson      Lesson    @relation(fields: [lessonId], references: [id])
  completed   Boolean   @default(false)
  lastAccessed DateTime @default(now())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@unique([userId, lessonId])
}
